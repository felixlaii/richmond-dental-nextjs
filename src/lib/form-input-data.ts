import { InputProps } from "@/components/ui/inputs/Input";

export const NEW_PATIENT_FORM_INPUTS: InputProps[] = [
  {
    id: "1",
    label: "Personal Information",
    placeholder: "* First Name",
    name: "firstName",
    type: "text",
    errorMessage: "First name is required",
    registerSpecs: { required: true, maxLength: 80 },
  },
  {
    id: "2",
    placeholder: "* Last Name",
    name: "lastName",
    type: "text",
    errorMessage: "Last name is required",
    registerSpecs: { required: true, maxLength: 80 },
  },
  {
    id: "3",
    placeholder: "* Date of Birth",
    name: "dateOfBirth",
    type: "text",
    errorMessage: "Date of Birth is required",
    registerSpecs: { required: true },
  },
  {
    id: "4",
    placeholder: "Preferred Name",
    name: "preferredName",
    type: "text",
    errorMessage: "Date of Birth is required",
    registerSpecs: { required: false },
  },
  {
    id: "5",
    label: "Gender",
    placeholder: "gender",
    type: "",
    name: "",
    errorMessage: "",
    registerSpecs: { required: false },
    options: [
      { val: "DEFAULT", name: "Select Gender" },
      { val: "Male", name: "Male" },
      { val: "Female", name: "Female" },
      { val: "Other", name: "Other" },
    ],
  },
  {
    id: "6",
    label: "Marital Status",
    placeholder: "Marital Status",
    type: "",
    name: "",
    errorMessage: "",
    registerSpecs: { required: false },
    options: [
      { val: "DEFAULT", name: "Select Marital Status" },
      { val: "Single", name: "Single" },
      { val: "Married", name: "Married" },
      { val: "Divorced", name: "Divorced" },
      { val: "Widow", name: "Widow" },
      { val: "Child", name: "Child" },
    ],
  },
  {
    id: "7",
    placeholder: "Home Phone",
    name: "homePhone",
    type: "text",
    errorMessage: "",
    registerSpecs: { minLength: 6, maxLength: 12 },
  },
  {
    id: "8",
    placeholder: "Mobile Phone",
    name: "mobilePhone",
    type: "text",
    errorMessage: "",
    registerSpecs: { minLength: 6, maxLength: 12 },
  },
  {
    id: "9",
    placeholder: "Work Phone",
    name: "workPhone",
    type: "text",
    errorMessage: "",
    registerSpecs: { minLength: 6, maxLength: 12 },
  },
  {
    id: "10",
    placeholder: "Ext",
    name: "ext",
    type: "text",
    errorMessage: "",
    registerSpecs: { minLength: 1, maxLength: 12 },
  },
  {
    id: "11",
    placeholder: "Email",
    name: "email",
    type: "text",
    errorMessage: "Your email is incorrect",
    registerSpecs: { pattern: /^\S+@\S+$/i },
  },
  {
    id: "12",
    label: "* How did you hear about us?",
    placeholder: "",
    type: "",
    name: "referral",
    errorMessage: "Please select one of the following",
    registerSpecs: { required: true },
    options: [
      { val: "DEFAULT", name: "Select" },
      { val: "Search Engine/Social Media", name: "Search Engine/Social Media" },
      { val: "Map", name: "Map" },
      { val: "Our Existing Patient", name: "Our Existing Patient" },
      { val: "Newspaper/Flyer", name: "Newspaper/Flyer" },
      { val: "Other", name: "Other" },
    ],
  },
  {
    id: "13",
    placeholder: "* Street",
    name: "address",
    type: "text",
    errorMessage: "Address is required",
    registerSpecs: { required: true },
  },
  {
    id: "14",
    placeholder: "Suite/Unit #",
    name: "suite",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "15",
    placeholder: "* City",
    name: "city",
    type: "text",
    errorMessage: "City is required",
    registerSpecs: { required: true },
  },
  {
    id: "16",
    label: "* Select Province",
    placeholder: "",
    type: "",
    name: "province",
    errorMessage: "Province is required",
    registerSpecs: { required: true },
    options: [
      { val: "DEFAULT", name: "Select" },
      { val: "Alberta", name: "Alberta" },
      { val: "British Columbia", name: "British Columbia" },
      { val: "Manitoba", name: "New Brunswick" },
      { val: "New Brunswick", name: "Newspaper/Flyer" },
      { val: "Newfoundland and Labrador", name: "Newfoundland and Labrador" },
      { val: "Northwest Territories", name: "Northwest Territories" },
      { val: "Nova Scotia", name: "Nova Scotia" },
      { val: "Nunavut", name: "Nunavut" },
      { val: "Ontario", name: "Ontario" },
      { val: "Prince Edward Island", name: "Prince Edward Island" },
      { val: "Quebec", name: "Quebec" },
      { val: "Saskatchewan", name: "Saskatchewan" },
      { val: "Yukon", name: "Yukon" },
    ],
  },
  {
    id: "17",
    placeholder: "* Postal Code",
    name: "postalCode",
    type: "text",
    errorMessage: "Postal Code is required",
    registerSpecs: { required: true },
  },
  {
    id: "18",
    label: "Primary Dental Benefit Plan, Relationship to Subscriber",
    placeholder: "Select",
    name: "subscriber",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
    options: [
      { val: "DEFAULT", name: "Select" },
      { val: "Self", name: "Self" },
      { val: "Spouse", name: "Spouse" },
      { val: "Child", name: "Child" },
    ],
  },
  {
    id: "19",
    placeholder: "Subscriber Name",
    name: "subscriberHistory",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "20",
    placeholder: "Insurance Company",
    name: "insuranceCompany",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "21",
    placeholder: "Phone Number",
    name: "phoneNumber",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "22",
    placeholder: "Plan/Policy Number",
    name: "planNum",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "23",
    placeholder: "Subscriber ID/Certificate #",
    name: "subscriberId",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "23",
    placeholder: "Subscriber ID/Certificate #",
    name: "subscriberId",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "24",
    label: "* Emergency Contact",
    placeholder: "* Name",
    name: "emerContact",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: true },
  },
  {
    id: "25",
    placeholder: "Relationship",
    name: "emerRelationship",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "26",
    label: "Phone Number",
    placeholder: "* Name",
    name: "emerTel",
    type: "text",
    errorMessage: "",
    registerSpecs: { minLength: 6, maxLength: 12 },
  },
  {
    id: "27",
    label: "Medical History",
    placeholder: "Family Doctor's Name",
    name: "famDocName",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "28",
    placeholder: "Family Doctor's Address",
    name: "famDocAddress",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "29",
    placeholder: "Family Doctor's Phone",
    name: "famDocTel",
    type: "text",
    errorMessage: "",
    registerSpecs: { minLength: 6, maxLength: 12 },
  },
  {
    id: "30",
    placeholder: "When was your last medical check-up?",
    name: "medCheck",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
  {
    id: "31",
    label: "Do you smoke?",
    placeholder: "Select",
    name: "smoke",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
    options: [
      { val: "DEFAULT", name: "Select" },
      { val: "No", name: "No" },
      { val: "Yes", name: "Yes" },
      { val: "Occasionally", name: "Occasionally" },
    ],
  },
  {
    id: "32",
    placeholder:
      "Are you being treated for or have you had any of the following medical conditions?",
    name: "medCheck",
    type: "text",
    errorMessage: "",
    registerSpecs: { required: false },
  },
];
